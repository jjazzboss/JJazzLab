package org.jjazz.test.walkingbass.generator;

import org.jjazz.uiutilities.api.UIUtilities;
import org.openide.windows.WindowManager;

/**
 *
 * @author lelas
 */
public class WbGeneratorSettingsDialog extends javax.swing.JDialog
{

    private final WalkingBassGeneratorSettings settings;

    /**
     * Creates new form WbGeneratorSettingsDialog
     *
     * @param modal
     */
    public WbGeneratorSettingsDialog(boolean modal)
    {
        super(WindowManager.getDefault().getMainWindow(), modal);
        settings = WalkingBassGeneratorSettings.getInstance();

        initComponents();
        sp_singleWbpSourceMaxCoverage.setValue((Integer) Math.round(settings.getSingleWbpSourceMaxSongCoveragePercentage() * 100f));
        sp_oneOutOfX.setValue((Integer) settings.getOneOutofX());
        sp_wbpsaStoreBarSize.setValue((Integer) settings.getWbpsaStoreBarSize());

        setLocationRelativeTo(WindowManager.getDefault().getMainWindow());
        UIUtilities.installEscapeKeyAction(this, () -> exit());
        UIUtilities.installEnterKeyAction(this, () -> exit());

    }

    private void exit()
    {
        setVisible(false);
        dispose();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        sp_singleWbpSourceMaxCoverage = new org.jjazz.flatcomponents.api.WheelSpinner();
        jLabel1 = new javax.swing.JLabel();
        sp_oneOutOfX = new org.jjazz.flatcomponents.api.WheelSpinner();
        jLabel2 = new javax.swing.JLabel();
        btn_close = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        sp_wbpsaStoreBarSize = new org.jjazz.flatcomponents.api.WheelSpinner();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(org.openide.util.NbBundle.getMessage(WbGeneratorSettingsDialog.class, "WbGeneratorSettingsDialog.title")); // NOI18N

        sp_singleWbpSourceMaxCoverage.setModel(new javax.swing.SpinnerNumberModel(30, 0, 100, 1));
        sp_singleWbpSourceMaxCoverage.addChangeListener(new javax.swing.event.ChangeListener()
        {
            public void stateChanged(javax.swing.event.ChangeEvent evt)
            {
                sp_singleWbpSourceMaxCoverageStateChanged(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(WbGeneratorSettingsDialog.class, "WbGeneratorSettingsDialog.jLabel1.text")); // NOI18N

        sp_oneOutOfX.setModel(new javax.swing.SpinnerNumberModel(3, 1, 20, 1));
        sp_oneOutOfX.addChangeListener(new javax.swing.event.ChangeListener()
        {
            public void stateChanged(javax.swing.event.ChangeEvent evt)
            {
                sp_oneOutOfXStateChanged(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(WbGeneratorSettingsDialog.class, "WbGeneratorSettingsDialog.jLabel2.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(btn_close, org.openide.util.NbBundle.getMessage(WbGeneratorSettingsDialog.class, "WbGeneratorSettingsDialog.btn_close.text")); // NOI18N
        btn_close.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btn_closeActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(WbGeneratorSettingsDialog.class, "WbGeneratorSettingsDialog.jLabel3.text")); // NOI18N

        sp_wbpsaStoreBarSize.setModel(new javax.swing.SpinnerNumberModel(8, 1, 30, 1));
        sp_wbpsaStoreBarSize.addChangeListener(new javax.swing.event.ChangeListener()
        {
            public void stateChanged(javax.swing.event.ChangeEvent evt)
            {
                sp_wbpsaStoreBarSizeStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btn_close))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(sp_singleWbpSourceMaxCoverage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(sp_oneOutOfX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(sp_wbpsaStoreBarSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))))
                        .addGap(0, 91, Short.MAX_VALUE)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {sp_oneOutOfX, sp_singleWbpSourceMaxCoverage, sp_wbpsaStoreBarSize});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sp_singleWbpSourceMaxCoverage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sp_oneOutOfX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sp_wbpsaStoreBarSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addComponent(btn_close)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_closeActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btn_closeActionPerformed
    {//GEN-HEADEREND:event_btn_closeActionPerformed
        exit();
    }//GEN-LAST:event_btn_closeActionPerformed

    private void sp_singleWbpSourceMaxCoverageStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_sp_singleWbpSourceMaxCoverageStateChanged
    {//GEN-HEADEREND:event_sp_singleWbpSourceMaxCoverageStateChanged
        float v = ((Integer) sp_singleWbpSourceMaxCoverage.getValue()) / 100f;
        settings.setSingleWbpSourceMaxSongCoveragePercentage(v);
    }//GEN-LAST:event_sp_singleWbpSourceMaxCoverageStateChanged

    private void sp_oneOutOfXStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_sp_oneOutOfXStateChanged
    {//GEN-HEADEREND:event_sp_oneOutOfXStateChanged
        settings.setOneOutofX((Integer) sp_oneOutOfX.getValue());
    }//GEN-LAST:event_sp_oneOutOfXStateChanged

    private void sp_wbpsaStoreBarSizeStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_sp_wbpsaStoreBarSizeStateChanged
    {//GEN-HEADEREND:event_sp_wbpsaStoreBarSizeStateChanged
        settings.setWbpsaStoreBarSize((Integer) sp_wbpsaStoreBarSize.getValue());
    }//GEN-LAST:event_sp_wbpsaStoreBarSizeStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_close;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private org.jjazz.flatcomponents.api.WheelSpinner sp_oneOutOfX;
    private org.jjazz.flatcomponents.api.WheelSpinner sp_singleWbpSourceMaxCoverage;
    private org.jjazz.flatcomponents.api.WheelSpinner sp_wbpsaStoreBarSize;
    // End of variables declaration//GEN-END:variables

}
